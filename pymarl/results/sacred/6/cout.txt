[INFO 16:49:30] pymarl Running command 'my_main'
[INFO 16:49:30] pymarl Started run with ID "6"
[DEBUG 16:49:30] pymarl Starting Heartbeat
[DEBUG 16:49:30] my_main Started
[WARNING 16:49:30] my_main CUDA flag use_cuda was switched OFF automatically because no CUDA devices are available!
[INFO 16:49:30] my_main Experiment Parameters:
[INFO 16:49:30] my_main 

{   'act_noise': 0.1,
    'action_range': None,
    'action_selector': 'gumbel',
    'add_value_last_step': True,
    'agent': 'qmixrnn',
    'agent_output_type': 'pi_logits',
    'agent_return_logits': False,
    'batch_size': 32,
    'batch_size_run': 1,
    'buffer_algo': None,
    'buffer_chunk_size': None,
    'buffer_cpu_only': True,
    'buffer_device': None,
    'buffer_mode': 'transitions',
    'buffer_size': 5000,
    'buffer_warmup': 0,
    'checkpoint_path': '',
    'continuous_actions': False,
    'critic_lr': 0.0005,
    'critic_train_reps': 1,
    'debug': False,
    'discretize_actions': False,
    'double_q': False,
    'env': 'sc2',
    'env_args': {   'continuing_episode': False,
                    'debug': False,
                    'difficulty': '7',
                    'game_version': None,
                    'heuristic_ai': False,
                    'heuristic_rest': False,
                    'map_name': 'offense_hard',
                    'move_amount': 2,
                    'obs_all_health': True,
                    'obs_broadcast_info': False,
                    'obs_communicate_info': True,
                    'obs_instead_of_state': True,
                    'obs_last_action': True,
                    'obs_own_health': True,
                    'obs_pathing_grid': True,
                    'obs_terrain_height': True,
                    'obs_timestep_number': False,
                    'replay_dir': '',
                    'replay_prefix': '',
                    'reward_death_value': 10,
                    'reward_defeat': 0,
                    'reward_negative_scale': 0.5,
                    'reward_only_positive': True,
                    'reward_scale': True,
                    'reward_scale_rate': 20,
                    'reward_sparse': False,
                    'reward_win': 200,
                    'seed': 289635768,
                    'state_last_action': False,
                    'state_timestep_number': False,
                    'step_mul': 8},
    'epsilon_anneal_time': 50000,
    'epsilon_decay_mode': None,
    'epsilon_finish': 0.05,
    'epsilon_start': 0.5,
    'evaluate': False,
    'exploration_mode': 'gaussian',
    'final_ou_noise_scale': 0.0,
    'gamma': 0.99,
    'grad_norm_clip': 10,
    'hidden_dim': 64,
    'label': 'default_label',
    'learn_interval': 1,
    'learner': 'maddpg_learner_discrete',
    'learner_log_interval': 10000,
    'load_step': 0,
    'local_results_path': './results',
    'log_interval': 10000,
    'lr': 0.0025,
    'mac': 'ddpg_mac',
    'mask_before_softmax': True,
    'n_runners': None,
    'n_train': 1,
    'name': 'maddpg',
    'obs_agent_id': True,
    'obs_last_action': True,
    'optim_alpha': 0.99,
    'optim_eps': 1e-05,
    'optimizer': 'adam',
    'ou_noise_scale': 0.3,
    'ou_sigma': 0.2,
    'ou_stop_episode': 100,
    'ou_theta': 0.15,
    'plot_loss_network': False,
    'q_embed_dim': 1,
    'q_nstep': 0,
    'recurrent_critic': False,
    'repeat_id': 1,
    'reward_multi_stage': {   'reward_alt_end_ratio': 0,
                              'reward_alt_end_step': 5000,
                              'reward_alt_method': 'linear',
                              'reward_alt_start_ratio': 0},
    'rnn_hidden_dim': 64,
    'run_mode': None,
    'runner': 'episode',
    'runner_log_interval': 10000,
    'runner_scope': 'parallel',
    'save_model': False,
    'save_model_interval': 10000,
    'save_replay': False,
    'seed': 289635768,
    'start_steps': 0,
    't_max': 10050000,
    'target_update_interval': 200,
    'target_update_mode': 'hard',
    'target_update_tau': 0.001,
    'td_lambda': 0.8,
    'test_greedy': True,
    'test_interval': 10000,
    'test_nepisode': 32,
    'testing_on': True,
    'use_buffer_compression': False,
    'use_cuda': False,
    'use_tensorboard': True,
    'verbose': False,
    'weight_decay': True,
    'weight_decay_factor': 0.0001}

[INFO 16:49:33] my_main Beginning training for 10050000 timesteps
[INFO 16:49:33] absl Launching SC2: /Applications/StarCraft II/Versions/Base92440/SC2.app/Contents/MacOS/SC2 -listen 127.0.0.1 -port 58464 -dataDir /Applications/StarCraft II/ -tempDir /var/folders/ww/6n9cccss24g7s1y2w9tj4kvm0000gn/T/sc-jhkq2qdf/ -displayMode 0 -windowwidth 1920 -windowheight 1200 -windowx 50 -windowy 50
[INFO 16:49:33] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 0, running: True
[INFO 16:49:34] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 1, running: True
[INFO 16:49:35] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 2, running: True
[INFO 16:49:36] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 3, running: True
[INFO 16:49:37] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 4, running: True
[INFO 16:49:38] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 5, running: True
[INFO 16:49:39] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 6, running: True
[INFO 16:49:40] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 7, running: True
[INFO 16:49:41] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 8, running: True
[INFO 16:49:43] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 9, running: True
[INFO 16:49:44] absl Connecting to: ws://127.0.0.1:58464/sc2api, attempt: 10, running: True
/Users/haydengu/Documents/Research Project/marl_sc2/pymarl/src/components/ddpg_episode_buffer.py:108: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /Users/runner/work/pytorch/pytorch/pytorch/torch/csrc/utils/tensor_new.cpp:277.)
  v = th.tensor(v, dtype=dtype, device=self.device)
/Users/haydengu/Documents/Research Project/marl_sc2/pymarl/src/components/ddpg_episode_buffer.py:108: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
/Users/haydengu/Documents/Research Project/marl_sc2/pymarl/src/components/episode_buffer.py:103: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  v = th.tensor(v, dtype=dtype, device=self.device)
[INFO 16:49:56] my_main t_env: 120 / 10050000
[INFO 16:49:56] my_main Estimated time left: 6 hours, 11 minutes, 8 seconds. Time passed: 22 seconds
